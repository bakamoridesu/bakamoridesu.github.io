{"version":3,"file":"component---src-pages-index-js-4ac90c0860b4ca462734.js","mappings":";0IAAA,OAOA,WACE,aAEA,IAAIA,EAAS,CAAC,EAAEC,eAEhB,SAASC,IAGP,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CACA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC1BL,EAAQM,KAAKF,QACR,GAAIG,MAAMC,QAAQJ,IACvB,GAAIA,EAAID,OAAQ,CACd,IAAIM,EAAQV,EAAWW,MAAM,KAAMN,GAE/BK,GACFT,EAAQM,KAAKG,EAEjB,OACK,GAAgB,WAAZJ,EACT,GAAID,EAAIO,WAAaC,OAAOC,UAAUF,SACpC,IAAK,IAAIG,KAAOV,EACVP,EAAOkB,KAAKX,EAAKU,IAAQV,EAAIU,IAC/Bd,EAAQM,KAAKQ,QAIjBd,EAAQM,KAAKF,EAAIO,WArBH,CAwBpB,CAEA,OAAOX,EAAQgB,KAAK,IACtB,CAEqCC,EAAOC,SAC1CnB,EAAWoB,QAAUpB,EACrBkB,EAAOC,QAAUnB,QAKhB,KAFwB,EAAF,WACrB,OAAOA,CACR,UAFoB,OAEpB,YAIJ,CAlDD,qHCJWqB,EAAc,sDCYZC,EAAW,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,KAClD,GAA8BC,EAAAA,EAAAA,WAAS,GAAhCC,EAAP,KAAgBC,EAAhB,KAEA,OACE,gBAAC,KAAD,CAAMC,GAAIP,EACJQ,UDbgB,qCCepB,uBACEA,UDlBiB,mCCmBjBC,aAAc,kBAAMH,GAAW,EAAjB,EACdI,aAAc,kBAAMJ,GAAW,EAAjB,GAEd,sBAAIE,UAAWG,IDvBA,iCCuBcN,EAAUP,EAAc,KAClDG,GAEH,uBAAKO,UD7BgB,wCC8BlBN,GAEH,uBAAKM,UD/BW,mCCgCd,uBAAKA,UD1BO,iCC0BZ,iBACgB,wBAAMA,UAAWH,EAAUP,EAAc,IAAzC,MAEhB,uBAAKU,UD/BY,sCCgCdL,KAMZ,ECPD,EAjCkB,WAChB,IAeMS,GAfOC,EAAAA,EAAAA,IAAe,cAeTC,OAAOC,MAC1B,OACE,gBAAC,IAAD,KACE,qDACCH,EAAMI,KAAI,SAACC,GAAD,OACT,gBAAClB,EAAD,CACEP,IAAKyB,EAAKC,GACVjB,MAAOgB,EAAKE,YAAYlB,MACxBE,KAAMc,EAAKE,YAAYhB,KACvBD,YAAae,EAAKE,YAAYjB,YAC9BF,KAAMiB,EAAKjB,MANJ,IAWhB","sources":["webpack://frontend-masters-intro-to-gatsby/./node_modules/classnames/index.js","webpack://frontend-masters-intro-to-gatsby/./src/components/card/card.module.css","webpack://frontend-masters-intro-to-gatsby/./src/components/card/PostCard.js","webpack://frontend-masters-intro-to-gatsby/./src/pages/index.js"],"sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg)) {\n        if (arg.length) {\n          var inner = classNames.apply(null, arg);\n\n          if (inner) {\n            classes.push(inner);\n          }\n        }\n      } else if (argType === 'object') {\n        if (arg.toString === Object.prototype.toString) {\n          for (var key in arg) {\n            if (hasOwn.call(arg, key) && arg[key]) {\n              classes.push(key);\n            }\n          }\n        } else {\n          classes.push(arg.toString());\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","// extracted by mini-css-extract-plugin\nexport var cardDescription = \"card-module--card-description--5Kp+j\";\nexport var cardFooter = \"card-module--card-footer--zjs3Z\";\nexport var cardHovered = \"card-module--card-hovered--+oeWM\";\nexport var cardTitle = \"card-module--card-title--mg7SY\";\nexport var cardWrapper = \"card-module--card-wrapper--EVLf1\";\nexport var datePublished = \"card-module--date-published--bAn7y\";\nexport var noDecoration = \"card-module--no-decoration--ZWBnv\";\nexport var readMore = \"card-module--read-more--6Winc\";","import * as React from 'react';\nimport {\n  cardWrapper,\n  cardTitle,\n  cardDescription,\n  noDecoration,\n  cardHovered,\n  cardFooter,\n  readMore,\n  datePublished\n} from './card.module.css';\nimport {Link} from \"gatsby\";\nimport {useState} from \"react\";\nimport cn from 'classnames';\n\nexport const PostCard = ({slug, title, description, date}) => {\n  const [hovered, setHovered] = useState(false)\n\n  return (\n    <Link to={slug}\n          className={noDecoration}\n    >\n      <div\n        className={cardWrapper}\n        onMouseEnter={() => setHovered(true)}\n        onMouseLeave={() => setHovered(false)}\n      >\n        <h3 className={cn(cardTitle, hovered ? cardHovered : '')}>\n          {title}\n        </h3>\n        <div className={cardDescription}>\n          {description}\n        </div>\n        <div className={cardFooter}>\n          <div className={readMore}>\n            Читать дальше <span className={hovered ? cardHovered : ''}>&rarr;</span>\n          </div>\n          <div className={datePublished}>\n            {date}\n          </div>\n        </div>\n      </div>\n    </Link>\n  )\n}\n","import * as React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport {PostCard} from \"../components/card/PostCard\";\nconst IndexPage = () => {\n  const data = useStaticQuery(graphql`\n      query GetBlogPosts {\n          allMdx(sort: {fields: frontmatter___date, order: DESC}) {\n              nodes {\n                  frontmatter {\n                      title\n                      description\n                      date(fromNow: true)\n                  }\n                  id\n                  slug\n              }\n          }\n      }\n  `)\n  const posts = data.allMdx.nodes;\n  return (\n    <Layout>\n      <h2>Недавно опубликованное:</h2>\n      {posts.map((post) => (\n        <PostCard\n          key={post.id}\n          title={post.frontmatter.title}\n          date={post.frontmatter.date}\n          description={post.frontmatter.description}\n          slug={post.slug}\n        />\n      ))}\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","cardHovered","PostCard","slug","title","description","date","useState","hovered","setHovered","to","className","onMouseEnter","onMouseLeave","cn","posts","useStaticQuery","allMdx","nodes","map","post","id","frontmatter"],"sourceRoot":""}